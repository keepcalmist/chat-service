// Code generated by options-gen. DO NOT EDIT.
package managerscheduler

import (
	fmt461e464ebed9 "fmt"
	"time"

	errors461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/errors"
	validator461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/validator"
)

type OptOptionsSetter func(o *Options)

func NewOptions(
	period time.Duration,
	managerPool managerPool,
	msgRepo msgRepo,
	problemsRepo problemsRepo,
	outboxSvc outboxSvc,
	transactor transactor,
	options ...OptOptionsSetter,
) Options {
	o := Options{}

	// Setting defaults from field tag (if present)

	o.period = period
	o.managerPool = managerPool
	o.msgRepo = msgRepo
	o.problemsRepo = problemsRepo
	o.outboxSvc = outboxSvc
	o.transactor = transactor

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func (o *Options) Validate() error {
	errs := new(errors461e464ebed9.ValidationErrors)
	errs.Add(errors461e464ebed9.NewValidationError("period", _validate_Options_period(o)))
	errs.Add(errors461e464ebed9.NewValidationError("managerPool", _validate_Options_managerPool(o)))
	errs.Add(errors461e464ebed9.NewValidationError("msgRepo", _validate_Options_msgRepo(o)))
	errs.Add(errors461e464ebed9.NewValidationError("problemsRepo", _validate_Options_problemsRepo(o)))
	errs.Add(errors461e464ebed9.NewValidationError("outboxSvc", _validate_Options_outboxSvc(o)))
	errs.Add(errors461e464ebed9.NewValidationError("transactor", _validate_Options_transactor(o)))
	return errs.AsError()
}

func _validate_Options_period(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.period, "min=100ms,max=1m"); err != nil {
		return fmt461e464ebed9.Errorf("field `period` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_managerPool(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.managerPool, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `managerPool` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_msgRepo(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.msgRepo, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `msgRepo` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_problemsRepo(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.problemsRepo, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `problemsRepo` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_outboxSvc(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.outboxSvc, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `outboxSvc` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_transactor(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.transactor, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `transactor` did not pass the test: %w", err)
	}
	return nil
}
